{"version":3,"file":"Video.js","sourceRoot":"","sources":["../../../play-dl/YouTube/classes/Video.ts"],"names":[],"mappings":"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","sourcesContent":["import { YouTubeChannel } from './Channel';\r\nimport { YouTubeThumbnail } from './Thumbnail';\r\n\r\n/**\r\n * Licensed music in the video\r\n * \r\n * The property names change depending on your region's language.\r\n */\r\ninterface VideoMusic {\r\n    song?: string | MusicEntry;\r\n    artist?: string | MusicEntry;\r\n    album?: string;\r\n    writers?: string;\r\n    license?: string;\r\n}\r\n\r\ninterface MusicEntry {\r\n    text?: string;\r\n    url?: string;\r\n}\r\n\r\ninterface VideoOptions {\r\n    /**\r\n     * YouTube Video ID\r\n     */\r\n    id?: string;\r\n    /**\r\n     * YouTube video url\r\n     */\r\n    url: string;\r\n    /**\r\n     * YouTube Video title\r\n     */\r\n    title?: string;\r\n    /**\r\n     * YouTube Video description.\r\n     */\r\n    description?: string;\r\n    /**\r\n     * YouTube Video Duration Formatted\r\n     */\r\n    durationRaw: string;\r\n    /**\r\n     * YouTube Video Duration in seconds\r\n     */\r\n    durationInSec: number;\r\n    /**\r\n     * YouTube Video Uploaded Date\r\n     */\r\n    uploadedAt?: string;\r\n    /**\r\n     * If the video is upcoming or a premiere that isn't currently live, this will contain the premiere date, for watch page playlists this will be true, it defaults to undefined\r\n     */\r\n    upcoming?: Date | true;\r\n    /**\r\n     * YouTube Views\r\n     */\r\n    views: number;\r\n    /**\r\n     * YouTube Thumbnail Data\r\n     */\r\n    thumbnail?: {\r\n        width: number | undefined;\r\n        height: number | undefined;\r\n        url: string | undefined;\r\n    };\r\n    /**\r\n     * YouTube Video's uploader Channel Data\r\n     */\r\n    channel?: YouTubeChannel;\r\n    /**\r\n     * YouTube Video's likes\r\n     */\r\n    likes: number;\r\n    /**\r\n     * YouTube Video live status\r\n     */\r\n    live: boolean;\r\n    /**\r\n     * YouTube Video private status\r\n     */\r\n    private: boolean;\r\n    /**\r\n     * YouTube Video tags\r\n     */\r\n    tags: string[];\r\n    /**\r\n     * `true` if the video has been identified by the YouTube community as inappropriate or offensive to some audiences and viewer discretion is advised\r\n     */\r\n    discretionAdvised?: boolean;\r\n    /**\r\n     * Gives info about music content in that video.\r\n     * \r\n     * The property names of VideoMusic change depending on your region's language.\r\n     */\r\n    music?: VideoMusic[];\r\n    /**\r\n     * The chapters for this video\r\n     *\r\n     * If the video doesn't have any chapters or if the video object wasn't created by {@link video_basic_info} or {@link video_info} this will be an empty array.\r\n     */\r\n    chapters: VideoChapter[];\r\n}\r\n\r\nexport interface VideoChapter {\r\n    /**\r\n     * The title of the chapter\r\n     */\r\n    title: string;\r\n    /**\r\n     * The timestamp of the start of the chapter\r\n     */\r\n    timestamp: string;\r\n    /**\r\n     * The start of the chapter in seconds\r\n     */\r\n    seconds: number;\r\n    /**\r\n     * Thumbnails of the frame at the start of this chapter\r\n     */\r\n    thumbnails: YouTubeThumbnail[];\r\n}\r\n\r\n/**\r\n * Class for YouTube Video url\r\n */\r\nexport class YouTubeVideo {\r\n    /**\r\n     * YouTube Video ID\r\n     */\r\n    id?: string;\r\n    /**\r\n     * YouTube video url\r\n     */\r\n    url: string;\r\n    /**\r\n     * YouTube Class type. == \"video\"\r\n     */\r\n    type: 'video' | 'playlist' | 'channel';\r\n    /**\r\n     * YouTube Video title\r\n     */\r\n    title?: string;\r\n    /**\r\n     * YouTube Video description.\r\n     */\r\n    description?: string;\r\n    /**\r\n     * YouTube Video Duration Formatted\r\n     */\r\n    durationRaw: string;\r\n    /**\r\n     * YouTube Video Duration in seconds\r\n     */\r\n    durationInSec: number;\r\n    /**\r\n     * YouTube Video Uploaded Date\r\n     */\r\n    uploadedAt?: string;\r\n    /**\r\n     * YouTube Live Date\r\n     */\r\n    liveAt?: string;\r\n    /**\r\n     * If the video is upcoming or a premiere that isn't currently live, this will contain the premiere date, for watch page playlists this will be true, it defaults to undefined\r\n     */\r\n    upcoming?: Date | true;\r\n    /**\r\n     * YouTube Views\r\n     */\r\n    views: number;\r\n    /**\r\n     * YouTube Thumbnail Data\r\n     */\r\n    thumbnails: YouTubeThumbnail[];\r\n    /**\r\n     * YouTube Video's uploader Channel Data\r\n     */\r\n    channel?: YouTubeChannel;\r\n    /**\r\n     * YouTube Video's likes\r\n     */\r\n    likes: number;\r\n    /**\r\n     * YouTube Video live status\r\n     */\r\n    live: boolean;\r\n    /**\r\n     * YouTube Video private status\r\n     */\r\n    private: boolean;\r\n    /**\r\n     * YouTube Video tags\r\n     */\r\n    tags: string[];\r\n    /**\r\n     * `true` if the video has been identified by the YouTube community as inappropriate or offensive to some audiences and viewer discretion is advised\r\n     */\r\n    discretionAdvised?: boolean;\r\n    /**\r\n     * Gives info about music content in that video.\r\n     */\r\n    music?: VideoMusic[];\r\n    /**\r\n     * The chapters for this video\r\n     *\r\n     * If the video doesn't have any chapters or if the video object wasn't created by {@link video_basic_info} or {@link video_info} this will be an empty array.\r\n     */\r\n    chapters: VideoChapter[];\r\n    /**\r\n     * Constructor for YouTube Video Class\r\n     * @param data JSON parsed data.\r\n     */\r\n    constructor(data: any) {\r\n        if (!data) throw new Error(`Can not initiate ${this.constructor.name} without data`);\r\n\r\n        this.id = data.id || undefined;\r\n        this.url = `https://www.youtube.com/watch?v=${this.id}`;\r\n        this.type = 'video';\r\n        this.title = data.title || undefined;\r\n        this.description = data.description || undefined;\r\n        this.durationRaw = data.duration_raw || '0:00';\r\n        this.durationInSec = (data.duration < 0 ? 0 : data.duration) || 0;\r\n        this.uploadedAt = data.uploadedAt || undefined;\r\n        this.liveAt = data.liveAt || undefined;\r\n        this.upcoming = data.upcoming;\r\n        this.views = parseInt(data.views) || 0;\r\n        const thumbnails = [];\r\n        for (const thumb of data.thumbnails) {\r\n            thumbnails.push(new YouTubeThumbnail(thumb));\r\n        }\r\n        this.thumbnails = thumbnails || [];\r\n        this.channel = new YouTubeChannel(data.channel) || {};\r\n        this.likes = data.likes || 0;\r\n        this.live = !!data.live;\r\n        this.private = !!data.private;\r\n        this.tags = data.tags || [];\r\n        this.discretionAdvised = data.discretionAdvised ?? undefined;\r\n        this.music = data.music || [];\r\n        this.chapters = data.chapters || [];\r\n    }\r\n    /**\r\n     * Converts class to title name of video.\r\n     * @returns Title name\r\n     */\r\n    toString(): string {\r\n        return this.url || '';\r\n    }\r\n    /**\r\n     * Converts class to JSON data\r\n     * @returns JSON data.\r\n     */\r\n    toJSON(): VideoOptions {\r\n        return {\r\n            id: this.id,\r\n            url: this.url,\r\n            title: this.title,\r\n            description: this.description,\r\n            durationInSec: this.durationInSec,\r\n            durationRaw: this.durationRaw,\r\n            uploadedAt: this.uploadedAt,\r\n            thumbnail: this.thumbnails[this.thumbnails.length - 1].toJSON() || this.thumbnails,\r\n            channel: this.channel,\r\n            views: this.views,\r\n            tags: this.tags,\r\n            likes: this.likes,\r\n            live: this.live,\r\n            private: this.private,\r\n            discretionAdvised: this.discretionAdvised,\r\n            music: this.music,\r\n            chapters: this.chapters\r\n        };\r\n    }\r\n}\r\n"]}