{"version":3,"file":"Channel.js","sourceRoot":"","sources":["../../../play-dl/YouTube/classes/Channel.ts"],"names":[],"mappings":";;;AAcA;;GAEG;AACH,MAAa,cAAc;IAiCvB;;;OAGG;IACH,YAAY,OAAY,EAAE;QACtB,IAAI,CAAC,IAAI;YAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,IAAI,CAAC,WAAW,CAAC,IAAI,sBAAsB,CAAC,CAAC;QAClG,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;QACrC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;IAChD,CAAC;IAED;;;;OAIG;IACH,OAAO,CAAC,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE;QACzB,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,GAAG,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC/F,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG;YAAE,OAAO,SAAS,CAAC;QAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,EAAE,KAAK,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC;IAC7E,CAAC;IACD;;;OAGG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IAC3B,CAAC;IACD;;;OAGG;IACH,MAAM;QACF,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;SAChC,CAAC;IACN,CAAC;CACJ;AAnFD,wCAmFC","sourcesContent":["export interface ChannelIconInterface {\r\n    /**\r\n     * YouTube Channel Icon URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * YouTube Channel Icon Width\r\n     */\r\n    width: number;\r\n    /**\r\n     * YouTube Channel Icon Height\r\n     */\r\n    height: number;\r\n}\r\n/**\r\n * YouTube Channel Class\r\n */\r\nexport class YouTubeChannel {\r\n    /**\r\n     * YouTube Channel Title\r\n     */\r\n    name?: string;\r\n    /**\r\n     * YouTube Channel Verified status.\r\n     */\r\n    verified?: boolean;\r\n    /**\r\n     * YouTube Channel artist if any.\r\n     */\r\n    artist?: boolean;\r\n    /**\r\n     * YouTube Channel ID.\r\n     */\r\n    id?: string;\r\n    /**\r\n     * YouTube Class type. == \"channel\"\r\n     */\r\n    type: 'video' | 'playlist' | 'channel';\r\n    /**\r\n     * YouTube Channel Url\r\n     */\r\n    url?: string;\r\n    /**\r\n     * YouTube Channel Icons data.\r\n     */\r\n    icons?: ChannelIconInterface[];\r\n    /**\r\n     * YouTube Channel subscribers count.\r\n     */\r\n    subscribers?: string;\r\n    /**\r\n     * YouTube Channel Constructor\r\n     * @param data YouTube Channel data that we recieve from basic info or from search\r\n     */\r\n    constructor(data: any = {}) {\r\n        if (!data) throw new Error(`Cannot instantiate the ${this.constructor.name} class without data!`);\r\n        this.type = 'channel';\r\n        this.name = data.name || null;\r\n        this.verified = !!data.verified || false;\r\n        this.artist = !!data.artist || false;\r\n        this.id = data.id || null;\r\n        this.url = data.url || null;\r\n        this.icons = data.icons || [{ url: null, width: 0, height: 0 }];\r\n        this.subscribers = data.subscribers || null;\r\n    }\r\n\r\n    /**\r\n     * Returns channel icon url\r\n     * @param {object} options Icon options\r\n     * @param {number} [options.size=0] Icon size. **Default is 0**\r\n     */\r\n    iconURL(options = { size: 0 }): string | undefined {\r\n        if (typeof options.size !== 'number' || options.size < 0) throw new Error('invalid icon size');\r\n        if (!this.icons?.[0]?.url) return undefined;\r\n        const def = this.icons?.[0]?.url.split('=s')[1].split('-c')[0];\r\n        return this.icons?.[0]?.url.replace(`=s${def}-c`, `=s${options.size}-c`);\r\n    }\r\n    /**\r\n     * Converts Channel Class to channel name.\r\n     * @returns name of channel\r\n     */\r\n    toString(): string {\r\n        return this.name || '';\r\n    }\r\n    /**\r\n     * Converts Channel Class to JSON format\r\n     * @returns json data of the channel\r\n     */\r\n    toJSON(): ChannelJSON {\r\n        return {\r\n            name: this.name,\r\n            verified: this.verified,\r\n            artist: this.artist,\r\n            id: this.id,\r\n            url: this.url,\r\n            icons: this.icons,\r\n            type: this.type,\r\n            subscribers: this.subscribers\r\n        };\r\n    }\r\n}\r\n\r\ninterface ChannelJSON {\r\n    /**\r\n     * YouTube Channel Title\r\n     */\r\n    name?: string;\r\n    /**\r\n     * YouTube Channel Verified status.\r\n     */\r\n    verified?: boolean;\r\n    /**\r\n     * YouTube Channel artist if any.\r\n     */\r\n    artist?: boolean;\r\n    /**\r\n     * YouTube Channel ID.\r\n     */\r\n    id?: string;\r\n    /**\r\n     * Type of Class [ Channel ]\r\n     */\r\n    type: 'video' | 'playlist' | 'channel';\r\n    /**\r\n     * YouTube Channel Url\r\n     */\r\n    url?: string;\r\n    /**\r\n     * YouTube Channel Icon data.\r\n     */\r\n    icons?: ChannelIconInterface[];\r\n    /**\r\n     * YouTube Channel subscribers count.\r\n     */\r\n    subscribers?: string;\r\n}\r\n"]}